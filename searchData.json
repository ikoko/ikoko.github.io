[{"url":"/2021/07/06/testfight-about/","content":"title: 关于 iOS TestFight \ndate: 2020-01-12 15:12:34\ntags: iOS\n\n![testfight](https://will-pic.oss-cn-beijing.aliyuncs.com/uPic/2021/8Ifg8f.png)\n"},{"url":"/2021/07/06/yymodel/","content":"title: 关于 TestFight \ndate: 2020-01-12 15:12:34\n\n![testfight](https://will-pic.oss-cn-beijing.aliyuncs.com/uPic/2021/8Ifg8f.png)\n\n### TestFight\n\n- Github：[YYModel](https://github.com/ibireme/YYModel)\n\n- 作者： [ibireme](http://blog.ibireme.com/)\n\n- 功能：高性能的 iOS JSON 模型框架，将JSON格式数据自动映射成Model\n\n<!-- more -->\n\n### YYModel的特性\n\n- **高性能**: 模型转换性能接近手写解析代码。\n- **自动类型转换**: 对象类型可以自动转换。\n- **类型安全**: 转换过程中，所有的数据类型都会被检测一遍，以保证类型安全，避免崩溃问题。\n- **无侵入性**: 使用Category，模型无需继承自其他基类。\n- **轻量**: 该框架只有 5 个文件 (包括.h文件)。\n- **文档和单元测试**: 文档覆盖率100%, 代码覆盖率99.6%。\n\n\n\n\n\n\n\n### 主流Model库性能对比\n\n|                     | 性能                             | 容错性                      | 功能                       | 侵入性                                  |\n| ------------------- | ------------------------------ | ------------------------ | ------------------------ | ------------------------------------ |\n| **Mantle**          | E                              | B 会进行对象类型检查              | A 可定制性最高                 | B 需要 Model 继承自某个基类，灵活性稍差，但功能丰富       |\n| **JSONModel**       | C 和 MJExtension 差不多，Mantle 性能高 | D 没有对错误类型的检测，没有对 App 的保护 | B 使用比较简单，但功能相对 Mantle 稍弱 | B 需要 Model 继承自某个基类，灵活性稍差，但功能丰富       |\n| **MJExtension**     | C 和JSONModel 差不多，Mantle 性能高    | C 对部分对象进行自动转换            | B 使用比较简单，但功能相对 Mantle 稍弱 | A- Category 方式来实现,添加了一些没有前缀的方法，易引起冲突 |\n| **FastEasyMapping** | B 较快                           | E 没有自动转换的机制              | C 功能最少，使用也不算方便           | C 采用工具类来实现，使用灵活，但不方便                 |\n| **YYModel**         | A 快，接近手写代码的效率                  | A 会进行对象类型检查              | B 使用比较简单，但功能相对 Mantle 稍弱 | A Category 方式来实现                     |\n\n\n\n\n\n\n\n### YYModel性能是如何提升的？\n\n1. 缓存\n\n   Model JSON 转换过程中需要很多类的元数据，如果数据足够小，则全部缓存到内存中。\n\n2. 查表\n\n   当遇到多项选择的条件时，要尽量使用查表法实现，比如 switch/case，C Array，如果查表条件是对象，则可以用 NSDictionary 来实现。\n\n3. 避免 KVC\n\n   Key-Value Coding 使用起来非常方便，但性能上要差于直接调用 Getter/Setter，所以如果能避免 KVC 而用 Getter/Setter 代替，性能会有较大提升。\n\n4. 避免 Getter/Setter 调用\n\n   如果能直接访问 ivar，则尽量使用 ivar 而不要使用 Getter/Setter 这样也能节省一部分开销。\n\n5. 避免多余的内存管理方法\n\n   在 ARC 条件下，默认声明的对象是 __strong 类型的，赋值时有可能会产生 retain/release 调用，如果一个变量在其生命周期内不会被释放，则使用 __unsafe_unretained 会节省很大的开销。\n\n   访问具有 __weak 属性的变量时，实际上会调用 objc_loadWeak() 和 objc_storeWeak() 来完成，这也会带来很大的开销，所以要避免使用 __weak 属性。\n\n   创建和使用对象时，要尽量避免对象进入 autoreleasepool，以避免额外的资源开销。\n\n6. 遍历容器类时，选择更高效的方法\n\n   相对于 Foundation 的方法来说，CoreFoundation 的方法有更高的性能，用 CFArrayApplyFunction() 和 CFDictionaryApplyFunction() 方法来遍历容器类能带来不少性能提升，但代码写起来会非常麻烦。\n\n7. 尽量用纯 C 函数、内联函数\n\n   使用纯 C 函数可以避免 ObjC 的消息发送带来的开销。如果 C 函数比较小，使用 inline 可以避免一部分压栈弹栈等函数调用的开销。\n\n8. 减少遍历的循环次数\n\n   在 JSON 和 Model 转换前，Model 的属性个数和 JSON 的属性个数都是已知的，这时选择数量较少的那一方进行遍历，会节省很多时间。"},{"title":"iOS远程实时涂鸦实现","url":"/2016/05/26/tuya-ios/","content":"iOS端本地绘画功能大家并不陌生，那么如何实现两个手机端，我在这边画你那边实时同步呢？等我有时间再写完这个博客告诉你吧\t\n\n<!-- more -->","tags":["iOS","socket","绘画"]},{"title":"博客开始","url":"/2016/01/19/blog-start/","content":"折腾了一番终于搭建好这个博客了，网上的教程大多不太详细，推荐这篇文章：[GitHub+Hexo搭建静态博客](http://ninghao.net/blog/1412)，以下是常用命令和Markdown语法测试😉.\t\n\n<!-- more -->\n\n## 常用命令\n\n清空文件\n\n``` bash\nsudo hexo clean\n```\n\n创建文件\n\n``` bash\nsudo hexo g\n```\n\n上传文件\n\n``` bash\nsudo hexo d\n```\n\n安装相应node模块\n\n``` bash\nsudo npm install\n```\n\n## Markdown语法\n\n推荐文章 [马克飞象](https://maxiang.io)\n\n# 欢迎使用马克飞象\n\n@(示例笔记本)[马克飞象|帮助|Markdown]\n\n**马克飞象**是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：\n\n- **功能丰富** ：支持高亮代码块、*LaTeX* 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；\n- **得心应手** ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web；\n- **深度整合** ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。\n\n------\n\n[TOC]\n\n## Markdown简介\n\n> Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [维基百科](https://zh.wikipedia.org/wiki/Markdown)\n\n正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为**粗体**或者*斜体*，创建一个[链接](http://www.example.com)或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按`Ctrl + /`查看帮助。 \n\n### 代码块\n\n``` python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    '''A docstring'''\n    if param1 > param2: # interesting\n        print 'Greater'\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n>>> message = '''interpreter\n... prompt'''\n```\n\n### LaTeX 公式\n\n可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式：\n\n$$\tx = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$\n\n### 表格\n\n| Item     |    Value | Qty  |\n| :------- | -------: | :--: |\n| Computer | 1600 USD |  5   |\n| Phone    |   12 USD |  12  |\n| Pipe     |    1 USD | 234  |\n\n### 流程图\n\n``` flow\nst=>start: Start\ne=>end\nop=>operation: My Operation\ncond=>condition: Yes or No?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n以及时序图:\n\n``` sequence\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n> **提示：**想了解更多，请查看**流程图**[语法][3]以及**时序图**[语法][4]。\n\n### 复选框\n\n使用 `- [ ]` 和 `- [x]` 语法可以创建复选框，实现 todo-list 等功能。例如：\n\n- [ ] 已完成事项\n- [ ] 待办事项1\n- [ ] 待办事项2\n\n> **注意：**目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在**马克飞象**中修改 Markdown 原文才可生效。下个版本将会全面支持。\n\n\n\n## 印象笔记相关\n\n### 笔记本和标签\n\n**马克飞象**增加了`@(笔记本)[标签A|标签B]`语法, 以选择笔记本和添加标签。 **绑定账号后**， 输入`(`自动会出现笔记本列表，请从中选择。\n\n### 笔记标题\n\n**马克飞象**会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 `欢迎使用马克飞象`。\n\n### 快捷编辑\n\n保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到**马克飞象**中打开并编辑该笔记。\n\n> **注意：**目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。\n\n### 数据同步\n\n**马克飞象**通过**将Markdown原文以隐藏内容保存在笔记中**的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。\n\n> **隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。**\n\n### 离线存储\n\n**马克飞象**使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过`文档管理`打开。\n\n> **注意：**虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，**请务必经常及时同步到印象笔记**。\n\n## 编辑器相关\n\n### 设置\n\n右侧系统菜单（快捷键`Ctrl + M`）的`设置`中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。\n\n### 快捷键\n\n帮助    `Ctrl + /`\n\n同步文档    `Ctrl + S`\n\n创建文档    `Ctrl + Alt + N`\n\n最大化编辑器    `Ctrl + Enter`\n\n预览文档 `Ctrl + Alt + Enter`\n\n文档管理    `Ctrl + O`\n\n系统菜单    `Ctrl + M` \n\n加粗    `Ctrl + B`\n\n插入图片    `Ctrl + G`\n\n插入链接    `Ctrl + L`\n\n提升标题    `Ctrl + H`\n\n## 关于试用\n\n**马克飞象**为新用户提供 10 天的试用期，试用期过后将不能同步新的笔记。之前保存过的笔记依然可以编辑。\n\n\n\n## 反馈与建议\n\n- 微博：[@马克飞象](http://weibo.com/u/2788354117)，[@GGock](http://weibo.com/ggock \"开发者个人账号\")\n- 邮箱：<hustgock@gmail.com>\n\n------\n\n感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。\n\n\n\n\n\n[^demo]: 这是一个示例脚注。请查阅 [MultiMarkdown 文档](https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes) 关于脚注的说明。 **限制：** 印象笔记的笔记内容使用 [ENML][5] 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致`脚注`和`TOC`无法正常点击。\n\n[1]: http://maxiang.info/client_zh\n[2]: https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop\n[3]: http://adrai.github.io/flowchart.js/\n[4]: http://bramp.github.io/js-sequence-diagrams/\n[5]: https://dev.yinxiang.com/doc/articles/enml.php\n\n\n\n","tags":["记事"]},{"title":"Hello World","url":"/2016/01/16/hello-world/","content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n"}]