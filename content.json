{"meta":{"title":"耳鸣","subtitle":null,"description":null,"author":"Will65","url":"http://yoursite.com"},"pages":[{"title":"","date":"2021-05-07T14:52:38.609Z","updated":"2017-05-05T08:04:33.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"testfight-about","date":"2021-07-06T03:26:20.763Z","updated":"2021-07-06T03:26:20.722Z","comments":true,"path":"2021/07/06/testfight-about/","link":"","permalink":"http://yoursite.com/2021/07/06/testfight-about/","excerpt":"","text":"title: 关于 iOS TestFightdate: 2020-01-12 15:12:34tags: iOS","categories":[],"tags":[]},{"title":"","slug":"yymodel","date":"2021-07-06T03:25:13.317Z","updated":"2021-07-06T03:25:13.312Z","comments":true,"path":"2021/07/06/yymodel/","link":"","permalink":"http://yoursite.com/2021/07/06/yymodel/","excerpt":"title: 关于 TestFightdate: 2020-01-12 15:12:34 TestFight Github：YYModel 作者： ibireme 功能：高性能的 iOS JSON 模型框架，将JSON格式数据自动映射成Model","text":"title: 关于 TestFightdate: 2020-01-12 15:12:34 TestFight Github：YYModel 作者： ibireme 功能：高性能的 iOS JSON 模型框架，将JSON格式数据自动映射成Model YYModel的特性 高性能: 模型转换性能接近手写解析代码。 自动类型转换: 对象类型可以自动转换。 类型安全: 转换过程中，所有的数据类型都会被检测一遍，以保证类型安全，避免崩溃问题。 无侵入性: 使用Category，模型无需继承自其他基类。 轻量: 该框架只有 5 个文件 (包括.h文件)。 文档和单元测试: 文档覆盖率100%, 代码覆盖率99.6%。 主流Model库性能对比 性能 容错性 功能 侵入性 Mantle E B 会进行对象类型检查 A 可定制性最高 B 需要 Model 继承自某个基类，灵活性稍差，但功能丰富 JSONModel C 和 MJExtension 差不多，Mantle 性能高 D 没有对错误类型的检测，没有对 App 的保护 B 使用比较简单，但功能相对 Mantle 稍弱 B 需要 Model 继承自某个基类，灵活性稍差，但功能丰富 MJExtension C 和JSONModel 差不多，Mantle 性能高 C 对部分对象进行自动转换 B 使用比较简单，但功能相对 Mantle 稍弱 A- Category 方式来实现,添加了一些没有前缀的方法，易引起冲突 FastEasyMapping B 较快 E 没有自动转换的机制 C 功能最少，使用也不算方便 C 采用工具类来实现，使用灵活，但不方便 YYModel A 快，接近手写代码的效率 A 会进行对象类型检查 B 使用比较简单，但功能相对 Mantle 稍弱 A Category 方式来实现 YYModel性能是如何提升的？ 缓存 Model JSON 转换过程中需要很多类的元数据，如果数据足够小，则全部缓存到内存中。 查表 当遇到多项选择的条件时，要尽量使用查表法实现，比如 switch/case，C Array，如果查表条件是对象，则可以用 NSDictionary 来实现。 避免 KVC Key-Value Coding 使用起来非常方便，但性能上要差于直接调用 Getter/Setter，所以如果能避免 KVC 而用 Getter/Setter 代替，性能会有较大提升。 避免 Getter/Setter 调用 如果能直接访问 ivar，则尽量使用 ivar 而不要使用 Getter/Setter 这样也能节省一部分开销。 避免多余的内存管理方法 在 ARC 条件下，默认声明的对象是 strong 类型的，赋值时有可能会产生 retain/release 调用，如果一个变量在其生命周期内不会被释放，则使用 unsafe_unretained 会节省很大的开销。 访问具有 weak 属性的变量时，实际上会调用 objc_loadWeak() 和 objc_storeWeak() 来完成，这也会带来很大的开销，所以要避免使用 weak 属性。 创建和使用对象时，要尽量避免对象进入 autoreleasepool，以避免额外的资源开销。 遍历容器类时，选择更高效的方法 相对于 Foundation 的方法来说，CoreFoundation 的方法有更高的性能，用 CFArrayApplyFunction() 和 CFDictionaryApplyFunction() 方法来遍历容器类能带来不少性能提升，但代码写起来会非常麻烦。 尽量用纯 C 函数、内联函数 使用纯 C 函数可以避免 ObjC 的消息发送带来的开销。如果 C 函数比较小，使用 inline 可以避免一部分压栈弹栈等函数调用的开销。 减少遍历的循环次数 在 JSON 和 Model 转换前，Model 的属性个数和 JSON 的属性个数都是已知的，这时选择数量较少的那一方进行遍历，会节省很多时间。","categories":[],"tags":[]},{"title":"iOS远程实时涂鸦实现","slug":"tuya-ios","date":"2016-05-26T15:59:34.000Z","updated":"2016-05-26T14:14:54.000Z","comments":true,"path":"2016/05/26/tuya-ios/","link":"","permalink":"http://yoursite.com/2016/05/26/tuya-ios/","excerpt":"iOS端本地绘画功能大家并不陌生，那么如何实现两个手机端，我在这边画你那边实时同步呢？等我有时间再写完这个博客告诉你吧","text":"iOS端本地绘画功能大家并不陌生，那么如何实现两个手机端，我在这边画你那边实时同步呢？等我有时间再写完这个博客告诉你吧","categories":[],"tags":[{"name":"iOS","slug":"iOS","permalink":"http://yoursite.com/tags/iOS/"},{"name":"socket","slug":"socket","permalink":"http://yoursite.com/tags/socket/"},{"name":"绘画","slug":"绘画","permalink":"http://yoursite.com/tags/绘画/"}]},{"title":"博客开始","slug":"blog-start","date":"2016-01-19T09:27:34.000Z","updated":"2016-04-25T11:57:38.000Z","comments":true,"path":"2016/01/19/blog-start/","link":"","permalink":"http://yoursite.com/2016/01/19/blog-start/","excerpt":"折腾了一番终于搭建好这个博客了，网上的教程大多不太详细，推荐这篇文章：GitHub+Hexo搭建静态博客，以下是常用命令和Markdown语法测试😉.","text":"折腾了一番终于搭建好这个博客了，网上的教程大多不太详细，推荐这篇文章：GitHub+Hexo搭建静态博客，以下是常用命令和Markdown语法测试😉. 常用命令清空文件 1sudo hexo clean 创建文件 1sudo hexo g 上传文件 1sudo hexo d 安装相应node模块 1sudo npm install Markdown语法推荐文章 马克飞象 欢迎使用马克飞象@(示例笔记本)[马克飞象|帮助|Markdown] 马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供桌面客户端以及离线Chrome App，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 [TOC] Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' LaTeX 公式可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式： $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 流程图1st=&#62;start: Start&#10;e=&#62;end&#10;op=&#62;operation: My Operation&#10;cond=&#62;condition: Yes or No?&#10;&#10;st-&#62;op-&#62;cond&#10;cond(yes)-&#62;e&#10;cond(no)-&#62;op 以及时序图: 1Alice-&#62;Bob: Hello Bob, how are you?&#10;Note right of Bob: Bob thinks&#10;Bob--&#62;Alice: I am good thanks! 提示：想了解更多，请查看流程图语法以及时序图语法。 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： [ ] 已完成事项 [ ] 待办事项1 [ ] 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。 印象笔记相关笔记本和标签马克飞象增加了@(笔记本)[标签A|标签B]语法, 以选择笔记本和添加标签。 绑定账号后， 输入(自动会出现笔记本列表，请从中选择。 笔记标题马克飞象会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 欢迎使用马克飞象。 快捷编辑保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到马克飞象中打开并编辑该笔记。 注意：目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。 数据同步马克飞象通过将Markdown原文以隐藏内容保存在笔记中的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。 隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。 离线存储马克飞象使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过文档管理打开。 注意：虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，请务必经常及时同步到印象笔记。 编辑器相关设置右侧系统菜单（快捷键Ctrl + M）的设置中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。 快捷键帮助 Ctrl + / 同步文档 Ctrl + S 创建文档 Ctrl + Alt + N 最大化编辑器 Ctrl + Enter 预览文档 Ctrl + Alt + Enter 文档管理 Ctrl + O 系统菜单 Ctrl + M 加粗 Ctrl + B 插入图片 Ctrl + G 插入链接 Ctrl + L 提升标题 Ctrl + H 关于试用马克飞象为新用户提供 10 天的试用期，试用期过后将不能同步新的笔记。之前保存过的笔记依然可以编辑。 反馈与建议 微博：@马克飞象，@GGock 邮箱：&#x68;&#117;&#115;&#x74;&#103;&#111;&#99;&#x6b;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109; 感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。 [^demo]: 这是一个示例脚注。请查阅 MultiMarkdown 文档 关于脚注的说明。 限制： 印象笔记的笔记内容使用 ENML 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致脚注和TOC无法正常点击。","categories":[],"tags":[{"name":"记事","slug":"记事","permalink":"http://yoursite.com/tags/记事/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-01-16T15:59:34.000Z","updated":"2017-05-04T10:25:07.000Z","comments":true,"path":"2016/01/16/hello-world/","link":"","permalink":"http://yoursite.com/2016/01/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}